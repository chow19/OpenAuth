//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System.Data.Entity;
using OpenAuth.Repository.Domain;
using OpenAuth.Repository.Mapping;
using OpenAuth.Repository.Domain.OldAJD;
using OpenAuth.Repository.Domain.OLDAJD;

namespace OpenAuth.Repository
{
    public partial class OpenAuthDBContext: DbContext
    {
        static  OpenAuthDBContext()
        {
            Database.SetInitializer< OpenAuthDBContext>(null);
        }
        public OpenAuthDBContext()
            :base("Name=OpenAuthDBContext")
        { }

        public OpenAuthDBContext(string nameOrConnectionString)
            : base(nameOrConnectionString)
        { }

        public System.Data.Entity.DbSet<Application> Applications { get; set; }
        public System.Data.Entity.DbSet<Category> Categories { get; set; }
        public System.Data.Entity.DbSet<CategoryType> CategoryTypes { get; set; }
        public System.Data.Entity.DbSet<Module> Modules { get; set; }
        public System.Data.Entity.DbSet<ModuleElement> ModuleElements { get; set; }
        public System.Data.Entity.DbSet<Org> Orgs { get; set; }
        public System.Data.Entity.DbSet<Relevance> Relevances { get; set; }
        public System.Data.Entity.DbSet<Resource> Resources { get; set; }
        public System.Data.Entity.DbSet<Role> Roles { get; set; }
        public System.Data.Entity.DbSet<Stock> Stocks { get; set; }
        public System.Data.Entity.DbSet<User> Users { get; set; }

        public System.Data.Entity.DbSet<Form> Forms { get; set; }

        public System.Data.Entity.DbSet<FlowInstance> FlowInstances { get; set; }
        public System.Data.Entity.DbSet<FlowInstanceOperationHistory> FlowInstanceOperationHistories { get; set; }
        public System.Data.Entity.DbSet<FlowInstanceTransitionHistory> FlowInstanceTransitionHistories { get; set; }
        public System.Data.Entity.DbSet<FlowScheme> FlowSchemes { get; set; }
        public System.Data.Entity.DbSet<Other_User> Other_User { get; set; }
        public System.Data.Entity.DbSet<Message> Message { get; set; }
        public System.Data.Entity.DbSet<Task> Task { get; set; }
        public System.Data.Entity.DbSet<A_PBOM> A_PBOM { get; set; }
        public System.Data.Entity.DbSet<A_PBOMEntry> A_PBOMEntry { get; set; }
        public System.Data.Entity.DbSet<PMC_MasterProductSchedule> PMC_MasterProductSchedule { get; set; }
        public System.Data.Entity.DbSet<PMC_MasterProductScheduleBOM> PMC_MasterProductScheduleBOM { get; set; }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Configurations.Add(new ApplicationMap());
            modelBuilder.Configurations.Add(new CategoryMap());
            modelBuilder.Configurations.Add(new CategoryTypeMap());
            modelBuilder.Configurations.Add(new ModuleMap());
            modelBuilder.Configurations.Add(new ModuleElementMap());
            modelBuilder.Configurations.Add(new OrgMap());
            modelBuilder.Configurations.Add(new RelevanceMap());
            modelBuilder.Configurations.Add(new ResourceMap());
            modelBuilder.Configurations.Add(new RoleMap());
            modelBuilder.Configurations.Add(new StockMap());
            modelBuilder.Configurations.Add(new UserMap());
            modelBuilder.Configurations.Add(new FormMap());
            modelBuilder.Configurations.Add(new FlowInstanceMap());
            modelBuilder.Configurations.Add(new FlowInstanceOperationHistoryMap());
            modelBuilder.Configurations.Add(new FlowInstanceTransitionHistoryMap());
            modelBuilder.Configurations.Add(new FlowSchemeMap());
            modelBuilder.Configurations.Add(new Other_UserMap());
            modelBuilder.Configurations.Add(new MessageMap());
            modelBuilder.Configurations.Add(new TaskMap());
            modelBuilder.Configurations.Add(new A_PBOMMap());
            modelBuilder.Configurations.Add(new A_PBOMEntryMap());

            modelBuilder.Configurations.Add(new PMC_MasterProductScheduleMap());
            modelBuilder.Configurations.Add(new PMC_MasterProductScheduleBOMMap());
        }
    }
}